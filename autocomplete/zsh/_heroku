#compdef heroku

COMMANDS_PATH=$(heroku autocomplete:commandspath)
COMMANDS_FUNCS_PATH="$(heroku autocomplete:commandspath)_functions"

source $COMMANDS_FUNCS_PATH

_cmds_list_backup () {
  compadd "$@" - $(grep -oe '^[a-zA-Z0-9:_-]\+' $COMMANDS_PATH)
}

_apps () {
  compset -P '*[=:]'
  _describe $(heroku autocomplete:values --cmd $_cmd_id --flag '--app')
}

_arguments '*:: :->fillintheblank'

local -a _plugins
local -a _flags
local -a _commands_list
local cur
local _cmd_id=${words[1]}

# first arg, always handle command_id
if [ "${#words}" -eq 1 ]; then
  # _describe -t commands "heroku command" _1st_arguments
  if type _cmds_list >/dev/null 2>&1; then
    _cmds_list
    _describe -t all-commands "all commands" _commands_list
    return
  fi
  _cmds_list_backup && return
else
# handle 0-to-N arg options, flags, and flag options
  local _ret=0
  cur=${words[CURRENT]}
  prev=${words[CURRENT-1]}
  case $cur in
     (--app=*) _apps && _ret=1 ;;
  esac
  case $prev in
     (--app) _apps && _ret=1 ;;
     (-a) _apps && _ret=1 ;;
  esac
  if [ $_ret -eq 1 ]; then
    return
  fi
fi

local command="${words[1]}"
local completion_func="_${command//:/_}"
declare -f $completion_func >/dev/null && $completion_func

_arguments $_flags
